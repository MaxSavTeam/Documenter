import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'

String cleanVersionName = ""
int verCode = 0
String projectPath = ""
int buildCode = -1;

android {
    signingConfigs {
        release {
            def verfile = file('keystore.properties')
            if (verfile.canRead()) {
                Properties properties = new Properties();
                properties.load(new FileInputStream(verfile))
                storeFile file("${properties['STOREFILE']}")
                storePassword = "${properties['STOREPASS']}"
                keyPassword = "${properties['KEYPASS']}"
                keyAlias = "${properties['KEY']}"
            }
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    def buildPropFile = file('build.properties')
    if (buildPropFile.canRead()) {
        Properties p = new Properties()
        p.load(new FileInputStream(buildPropFile))
        buildCode = p['BUILD'].toInteger() + 1
        projectPath = p['PROJECT_PATH']
        p['BUILD'] = buildCode.toString()
        p.store(buildPropFile.newWriter(), null)
    }
    defaultConfig {
        applicationId "com.maxsavitsky.documenter"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 48

        verCode = versionCode
        cleanVersionName = "1.11.1"

        versionName cleanVersionName
        buildConfigField "String", "COMPILATION_DATE", "\"${getDate()}\""
        buildConfigField "int", "BUILD_CODE", "${buildCode}"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //shrinkResources true
        }
        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".alpha"
            FirebasePerformance {
                instrumentationEnabled false
            }
            versionNameSuffix '-dev'
        }
    }
}

static def String formatDate(String format){
    SimpleDateFormat dateFormat = new SimpleDateFormat(format)
    return dateFormat.format(new Date())
}

static String getDate() {
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
    simpleDateFormat.setTimeZone(TimeZone.getTimeZone("GMT+3"));
    return simpleDateFormat.format(new Date())
}

afterEvaluate{ // delete this if you aren't me
    assembleRelease.doLast{
        exec {
            commandLine ("cmd", "/c", "groovy", "${projectPath}app\\after_build_tasks.groovy", 'afterBuildTask', cleanVersionName, verCode, buildCode)
        }
    }
}

task rollbackUpdate(type: Exec){
    commandLine "cmd", "/c", "groovy", "${projectPath}app\\after_build_tasks.groovy", 'rollBack'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'

    implementation 'com.android.support:design:30.0.0'
    implementation files('libs/quadflask.colorpicker.aar')
    implementation 'com.github.clans:fab:1.6.4'

    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.google.firebase:firebase-core:17.5.0'
    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.google.firebase:firebase-storage:19.2.0'
    implementation 'com.google.firebase:firebase-database:19.4.0'
    implementation 'com.google.firebase:firebase-perf:19.0.8'
}
